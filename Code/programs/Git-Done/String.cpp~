#include<iostream>
#include<cmath>

using namespace std;

void scopy ( char destination[] , const char source[] , int start )
{
	int i;
	for ( i = 0; source[i] != '\0'; i++)
		destination[start + i] = source[i];
	destination[start + i] = source[i];
}


int length ( const char source[] )
{
	int l = 0;
	for ( int i = 0; source[i] != '\0'; i++ ) l++;
	return l;
}


class String 
{
public :
	char * ptr;

	String() // Default construcor
	{
		ptr = NULL;
	}

	String( const String & source ) // Copy constructor
	{
		ptr = new char[ length(source.ptr) + 1 ];
		scopy ( ptr, source.ptr, 0 );
	}

	String & operator = ( const char * rhs ) // Assigning = in b/w String and char array
	{
		delete [] ptr;
		ptr = new char[ length(rhs) + 1 ];
		scopy ( ptr, rhs  , 0 );
		return * this;
	}

	String & operator = ( const String & rhs ) // Assigning = b/w String and String 
	{	
		if ( this == &rhs ) return * this;
		else
		{
			delete [] ptr;
			ptr = new char[ length(rhs.ptr) + 1 ];
			scopy ( ptr, rhs.ptr , 0 );
			return * this;
		}
	}

	String operator + ( const String & rhs ) // Adding two Strings
	{
		String res;
		res.ptr = new char[ length(ptr) + length(rhs.ptr) +1 ];
		int i =0;
		for ( i = 0; i<length(ptr); i++)
		{
			res.ptr[i] = ptr[i];
		}
		for ( i=0; i<length(rhs.ptr); i++)
		{
			res.ptr[length(ptr) + i] = rhs.ptr[i];
		}
		res.ptr[length(ptr) + length(rhs.ptr)] = rhs.ptr[i];
		return res;
	}

	char & operator [] ( int i ) const
	{
		return ptr[i];	
	}

	void print() // Printing a String
	{
		if ( ptr != NULL ) cout << ptr << endl;
		else cout << "NULL \n";
	}

	~String() // Destructor
	{
		delete [] ptr;
	}

};


String lcase( const String & arg )
{
	String res = arg;
	for ( int i = 0; i<length(res.ptr); i++)
			if( res[i] >= 'A' && res[i] <= 'Z' ) res[i] += 'a' - 'A';
	return res;
}

int main()
{
	String a;
	cout << "Default constructor :\n";
	a.print();
	char ch[] = "AbcD";
	a = ch;
	cout << "Assigning character array to a :\n";
	a.print();
	String b(a);
	cout << "Copy constructor :\n";
	b.print();
	String c;
	c = a;
	cout << "Assigning String to a String :\n";
	c.print();
	cout << "Accesing the third element of String c :\n";
	cout << c[2] << endl;
	cout << "Testing lcase function :\n";
	lcase(c).print();	
	String d;
	d = a +b;
	cout << "Assigning d = a + b :\n";
	d.print();
}
